[{"/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/index.js":"1","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/reportWebVitals.js":"2","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/App.js":"3","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/main.jsx":"4","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/newPet.jsx":"5","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/editPet.jsx":"6","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/viewPet.jsx":"7"},{"size":647,"mtime":1697042852289,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1697039091162,"results":"10","hashOfConfig":"9"},{"size":1297,"mtime":1697049948924,"results":"11","hashOfConfig":"9"},{"size":2628,"mtime":1697049974873,"results":"12","hashOfConfig":"9"},{"size":4328,"mtime":1697053588621,"results":"13","hashOfConfig":"9"},{"size":4936,"mtime":1697049780100,"results":"14","hashOfConfig":"9"},{"size":3985,"mtime":1697053388423,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u1tizw",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/index.js",[],[],"/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/reportWebVitals.js",[],[],["42"],"/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/App.js",["43","44"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {Link, Navigate, Route, Routes,} from \"react-router-dom\";\nimport Main from \"./components/main\";\nimport NewPet from \"./components/newPet\";\nimport EditPet from \"./components/editPet\";\nimport ViewPet from \"./components/viewPet\";\n\nconst styles = {\n    mainContainer: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    routsContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        border: \"1px solid black\",\n        width: \"600px\",\n        padding: \"10px 10px 20px 10px\",\n        borderRadius: \"10px\"\n    }\n}\n\nfunction App() {\n    return (\n        <div style={styles.mainContainer}>\n            <div style={styles.routsContainer}>\n                <div>\n                    <h1>Pet Shelter</h1>\n                </div>\n                <Routes>\n                    <Route path=\"/pets\" element={<Main/>}/>\n                    <Route path=\"/\" element={<Navigate to=\"/pets\"/>}/>\n                    <Route path=\"/pets/new\" element={<NewPet/>}/>\n                    <Route path=\"/pets/:id/edit\" element={<EditPet/>}/>\n                    <Route path=\"/pets/:id\" element={<ViewPet/>}/>\n                </Routes>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/main.jsx",[],[],"/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/newPet.jsx",["45","46"],[],"import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst styles = {\n    formContainer: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    formItem: {\n        marginTop: \"3px\"\n    },\n    formSubmit: {\n        padding: \"5px\",\n        marginTop: \"20px\"\n    },\n    splitForm: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"500px\"\n    },\n    topNav:{\n        display:\"flex\",\n        justifyContent: \"space-between\",\n        paddingRight:\"145px\",\n        alignItems:\"center\"\n    },\n    newAuthorLink: {\n        color: \"blue\",\n        textDecoration: \"underline\"\n    }\n}\nconst NewPet = () => {\n    const navigate = useNavigate()\n\n    const [error, setError] = useState({})\n    const [petName, setPetName] = useState(\"\")\n    const [petType, setPetType] = useState(\"\")\n    const [petDescription, setPetDescription] = useState(\"\")\n    const [petSkills, setPetSkills] = useState([])\n    const [petLikes, setPetLikes] = useState(0)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const newPet = {\n            petName, petType, petDescription, petSkills, petLikes\n        }\n\n        axios.post(\"http://localhost:8080/api/pets\", newPet)\n            .then(res => navigate(\"/pets\")\n            )\n            .catch(err => {\n                setError(err.response.data.errors)\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <div style={styles.topNav}>\n                <h3>Know a pet needing a home?</h3>\n                <p>Skills (optional)</p>\n            </div>\n            <div>\n                <form onSubmit={submitHandler} style={styles.splitForm}>\n\n                    <div style={styles.formContainer}>\n                        <label style={styles.formItem}>Name:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => setPetName(e.target.value)}/>\n                        {error.petName && <p>{error.petName.message}</p>}\n\n                        <label style={styles.formItem}>Type: </label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => setPetType(e.target.value)}/>\n                        {error.petType && <p>{error.petType.message}</p>}\n\n                        <label style={styles.formItem}>Description:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => setPetDescription(e.target.value)}/>\n                        {error.petDescription && <p>{error.petDescription.message}</p>}\n\n                        <p style={styles.newAuthorLink} onClick={()=>{navigate(\"/\")}}>Back home</p>\n                    </div>\n\n                    <div style={styles.formContainer}>\n                        <label style={styles.formItem}>Skill 1:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[0] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }}/>\n                        {error.petSkills && <p>{error.petSkills.message}</p>}\n\n                        <label style={styles.formItem}>Skill 2:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[1] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }}/>\n                        {error.petSkills && <p>{error.petSkills.message}</p>}\n\n                        <label style={styles.formItem}>Skill 3:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[2] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }}/>\n                        {error.petSkills && <p>{error.petSkills.message}</p>}\n\n                        <input style={styles.formSubmit} type=\"submit\" value=\"Create Pet\"/>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default NewPet","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/editPet.jsx",["47"],[],"import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useParams, useNavigate} from \"react-router-dom\";\n\nconst styles = {\n    formContainer: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    formItem: {\n        marginTop: \"3px\"\n    },\n    formSubmit: {\n        padding: \"5px\",\n        marginTop: \"20px\"\n    },\n    splitForm: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"500px\"\n    },\n    topNav:{\n        display:\"flex\",\n        justifyContent: \"space-between\",\n        paddingRight:\"145px\",\n        alignItems:\"center\"\n    },\n    newAuthorLink: {\n        color: \"blue\",\n        textDecoration: \"underline\"\n    }\n}\nconst EditPet = () => {\n    const navigate = useNavigate()\n\n    const {id} = useParams()\n    const[temp, setTemp] =useState(\"\")\n    const [error, setError] = useState({})\n    const [petName, setPetName] = useState(\"\")\n    const [petType, setPetType] = useState(\"\")\n    const [petDescription, setPetDescription] = useState(\"\")\n    const [petSkills, setPetSkills] = useState([])\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:8080/api/pets/${id}`)\n            .then(res =>{\n                setPetName(res.data.petName)\n                setPetType(res.data.petType)\n                setPetDescription(res.data.petDescription)\n                setPetSkills(res.data.petSkills)\n                setTemp(res.data.petName)\n\n            })\n    }, []);\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        const newPet = {\n            petName, petType, petDescription, petSkills\n        }\n\n\n        axios.put(`http://localhost:8080/api/pets/${id}/edit`, newPet)\n            .then(res => navigate(\"/pets\")\n            )\n            .catch(err => {\n                console.log(err)\n                setError(err.response.data.errors)\n                console.log(error)\n            })\n    }\n\n    return (\n        <div>\n            <div style={styles.topNav}>\n                <h3>Edit {temp}</h3>\n                <p>Skills (optional)</p>\n            </div>\n            <div>\n                <form onSubmit={submitHandler} style={styles.splitForm}>\n\n                    <div style={styles.formContainer}>\n                        <label style={styles.formItem}>Name:</label>\n                        <input name=\"petName\" style={styles.formItem} type=\"text\" value={petName} onChange={(e) => setPetName(e.target.value)} />\n\n                        {error.petName && <p>{error.petName.message}</p>}\n\n                        <label style={styles.formItem}>Type: </label>\n                        <input name=\"petType\" style={styles.formItem} type=\"text\" value={petType} onChange={(e) => setPetType(e.target.value)} />\n\n                        {error.petType && <p>{error.petType.message}</p>}\n\n                        <label style={styles.formItem}>Description:</label>\n                        <input name=\"petDescription\" style={styles.formItem} type=\"text\" value={petDescription} onChange={(e) => setPetDescription(e.target.value)} />\n\n                        {error.petDescription && <p>{error.petDescription.message}</p>}\n                        <p style={styles.newAuthorLink} onClick={()=>{navigate(\"/\")}}>Back home</p>\n\n                    </div>\n\n                    <div style={styles.formContainer}>\n                        <label style={styles.formItem}>Skill 1:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[0] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }}  value={petSkills[0]}/>\n                        {/*{error.name && <p>{error.name.message}</p>}*/}\n\n                        <label style={styles.formItem}>Skill 2:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[1] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }} value={petSkills[1]}/>\n                        {/*{error.type && <p>{error.type.message}</p>}*/}\n\n                        <label style={styles.formItem}>Skill 3:</label>\n                        <input style={styles.formItem} type=\"text\" onChange={(e) => {\n                            const updatedSkills = [...petSkills]\n                            updatedSkills[2] = e.target.value\n                            setPetSkills(updatedSkills)\n                        }} value={petSkills[2]}/>\n                        {/*{error.description && <p>{error.description.message}</p>}*/}\n\n                        <input style={styles.formSubmit} type=\"submit\" value=\"Update Pet\"/>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default EditPet","/Users/carlossanchez/Documents/coding_dojo/mern_stack/mern_exam/client/src/components/viewPet.jsx",["48","49"],[],"import {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useParams, useNavigate} from \"react-router-dom\";\n\nconst styles = {\n    formContainer: {\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    formItem: {\n        marginTop: \"3px\"\n    },\n    formSubmit: {\n        padding: \"5px\",\n        marginTop: \"20px\"\n    },\n    splitForm: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"500px\"\n    },\n    topNav: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        paddingRight: \"145px\",\n        alignItems: \"center\"\n    },\n    newAuthorLink: {\n        color: \"blue\",\n        textDecoration: \"underline\"\n    },\n    petDetails: {\n        display: \"flex\"\n    },\n    likeArea: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginRight: \"400px\"\n    }\n}\nconst ViewPet = () => {\n    const navigate = useNavigate()\n\n    const {id} = useParams()\n    const [temp, setTemp] = useState(\"\")\n    const [error, setError] = useState({})\n    const [petName, setPetName] = useState(\"\")\n    const [petType, setPetType] = useState(\"\")\n    const [petDescription, setPetDescription] = useState(\"\")\n    const [petSkills, setPetSkills] = useState([])\n    const [petLikes, setPetLikes] = useState(0)\n    const [buttonDisabled, setButtonDisabled] = useState(false)\n\n\n    useEffect(() => {\n        axios.get(`http://localhost:8080/api/pets/${id}`)\n            .then(res => {\n                setPetName(res.data.petName)\n                setPetType(res.data.petType)\n                setPetDescription(res.data.petDescription)\n                setPetSkills(res.data.petSkills)\n                setTemp(res.data.petName)\n                setPetLikes(res.data.petLikes)\n\n            })\n    }, []);\n\n    const deletePet = (idz) => {\n        axios.delete(`http://localhost:8080/api/pets/${idz}`)\n            .then(res => {\n                console.log({deletedId: id})\n                navigate(\"/\")\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const likePet = (idz) => {\n\n        const newLikes = petLikes + 1\n        setPetLikes(newLikes)\n\n\n        axios.put(`http://localhost:8080/api/pets/${idz}/edit`, {petLikes: newLikes})\n            .then(res => {\n                    console.log(res)\n                    setButtonDisabled(true)\n                }\n            )\n            .catch(err => {\n                console.log(err)\n                setError(err.response.data.errors)\n                console.log(error)\n            })\n    }\n\n\n    return (\n        <div>\n            <div style={styles.topNav}>\n                <h1>Details about {temp}</h1>\n                <button onClick={() => {\n                    deletePet(id)\n                }}>Adopt Pet\n                </button>\n            </div>\n            <p style={styles.newAuthorLink} onClick={() => {\n                navigate(\"/\")\n            }}>Back home</p>\n            <hr/>\n            <div>\n                <div style={styles.petDetails}>\n                    <h4>Pet type:&nbsp; </h4>\n                    <h4>{petType}</h4>\n                </div>\n                <div style={styles.petDetails}>\n                    <h4>Description:&nbsp;</h4>\n                    <h4>{petDescription}</h4>\n                </div>\n                <div style={styles.petDetails}>\n                    <h4>Skills: &nbsp;</h4>\n                    <div>\n                        {petSkills.map((each, idx) => {\n                            return (<h4 key={idx}> {each} </h4>)\n                        })}\n                    </div>\n                </div>\n            </div>\n            <div style={styles.likeArea}>\n                <button onClick={() => {\n                    likePet(id)\n                }} disabled={buttonDisabled}>Like Pet\n                </button>\n                <h4>Likes: {petLikes}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPet",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":3,"column":9,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":1,"column":19,"nodeType":"54","messageId":"55","endLine":1,"endColumn":28},{"ruleId":"52","severity":1,"message":"58","line":41,"column":22,"nodeType":"54","messageId":"55","endLine":41,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":55,"column":8,"nodeType":"61","endLine":55,"endColumn":10,"suggestions":"62"},{"ruleId":"52","severity":1,"message":"63","line":48,"column":12,"nodeType":"54","messageId":"55","endLine":48,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":67,"column":8,"nodeType":"61","endLine":67,"endColumn":10,"suggestions":"64"},"no-new-object",["65"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'setPetLikes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'petName' is assigned a value but never used.",["67"],"no-object-constructor",{"desc":"68","fix":"69"},{"desc":"68","fix":"70"},"Update the dependencies array to be: [id]",{"range":"71","text":"72"},{"range":"73","text":"72"},[1445,1447],"[id]",[1808,1810]]